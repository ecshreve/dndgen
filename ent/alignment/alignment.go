// Code generated by ent, DO NOT EDIT.

package alignment

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the alignment type in the database.
	Label = "alignment"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIndx holds the string denoting the indx field in the database.
	FieldIndx = "indx"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// FieldAbbr holds the string denoting the abbr field in the database.
	FieldAbbr = "abbr"
	// Table holds the table name of the alignment in the database.
	Table = "alignments"
)

// Columns holds all SQL columns for alignment fields.
var Columns = []string{
	FieldID,
	FieldIndx,
	FieldName,
	FieldDesc,
	FieldAbbr,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Alignment queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByIndx orders the results by the indx field.
func ByIndx(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIndx, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByAbbr orders the results by the abbr field.
func ByAbbr(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAbbr, opts...).ToFunc()
}
