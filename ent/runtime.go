// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/ecshreve/dndgen/ent/abilityscore"
	"github.com/ecshreve/dndgen/ent/alignment"
	"github.com/ecshreve/dndgen/ent/condition"
	"github.com/ecshreve/dndgen/ent/damagetype"
	"github.com/ecshreve/dndgen/ent/feat"
	"github.com/ecshreve/dndgen/ent/language"
	"github.com/ecshreve/dndgen/ent/magicschool"
	"github.com/ecshreve/dndgen/ent/race"
	"github.com/ecshreve/dndgen/ent/rule"
	"github.com/ecshreve/dndgen/ent/rulesection"
	"github.com/ecshreve/dndgen/ent/schema"
	"github.com/ecshreve/dndgen/ent/skill"
	"github.com/ecshreve/dndgen/ent/weaponproperty"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	abilityscoreMixin := schema.AbilityScore{}.Mixin()
	abilityscoreMixinFields0 := abilityscoreMixin[0].Fields()
	_ = abilityscoreMixinFields0
	abilityscoreFields := schema.AbilityScore{}.Fields()
	_ = abilityscoreFields
	// abilityscoreDescIndx is the schema descriptor for indx field.
	abilityscoreDescIndx := abilityscoreMixinFields0[0].Descriptor()
	// abilityscore.IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	abilityscore.IndxValidator = abilityscoreDescIndx.Validators[0].(func(string) error)
	// abilityscoreDescName is the schema descriptor for name field.
	abilityscoreDescName := abilityscoreMixinFields0[1].Descriptor()
	// abilityscore.NameValidator is a validator for the "name" field. It is called by the builders before save.
	abilityscore.NameValidator = abilityscoreDescName.Validators[0].(func(string) error)
	alignmentMixin := schema.Alignment{}.Mixin()
	alignmentMixinFields0 := alignmentMixin[0].Fields()
	_ = alignmentMixinFields0
	alignmentFields := schema.Alignment{}.Fields()
	_ = alignmentFields
	// alignmentDescIndx is the schema descriptor for indx field.
	alignmentDescIndx := alignmentMixinFields0[0].Descriptor()
	// alignment.IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	alignment.IndxValidator = alignmentDescIndx.Validators[0].(func(string) error)
	// alignmentDescName is the schema descriptor for name field.
	alignmentDescName := alignmentMixinFields0[1].Descriptor()
	// alignment.NameValidator is a validator for the "name" field. It is called by the builders before save.
	alignment.NameValidator = alignmentDescName.Validators[0].(func(string) error)
	conditionMixin := schema.Condition{}.Mixin()
	conditionMixinFields0 := conditionMixin[0].Fields()
	_ = conditionMixinFields0
	conditionFields := schema.Condition{}.Fields()
	_ = conditionFields
	// conditionDescIndx is the schema descriptor for indx field.
	conditionDescIndx := conditionMixinFields0[0].Descriptor()
	// condition.IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	condition.IndxValidator = conditionDescIndx.Validators[0].(func(string) error)
	// conditionDescName is the schema descriptor for name field.
	conditionDescName := conditionMixinFields0[1].Descriptor()
	// condition.NameValidator is a validator for the "name" field. It is called by the builders before save.
	condition.NameValidator = conditionDescName.Validators[0].(func(string) error)
	damagetypeMixin := schema.DamageType{}.Mixin()
	damagetypeMixinFields0 := damagetypeMixin[0].Fields()
	_ = damagetypeMixinFields0
	damagetypeFields := schema.DamageType{}.Fields()
	_ = damagetypeFields
	// damagetypeDescIndx is the schema descriptor for indx field.
	damagetypeDescIndx := damagetypeMixinFields0[0].Descriptor()
	// damagetype.IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	damagetype.IndxValidator = damagetypeDescIndx.Validators[0].(func(string) error)
	// damagetypeDescName is the schema descriptor for name field.
	damagetypeDescName := damagetypeMixinFields0[1].Descriptor()
	// damagetype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	damagetype.NameValidator = damagetypeDescName.Validators[0].(func(string) error)
	featMixin := schema.Feat{}.Mixin()
	featMixinFields0 := featMixin[0].Fields()
	_ = featMixinFields0
	featFields := schema.Feat{}.Fields()
	_ = featFields
	// featDescIndx is the schema descriptor for indx field.
	featDescIndx := featMixinFields0[0].Descriptor()
	// feat.IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	feat.IndxValidator = featDescIndx.Validators[0].(func(string) error)
	// featDescName is the schema descriptor for name field.
	featDescName := featMixinFields0[1].Descriptor()
	// feat.NameValidator is a validator for the "name" field. It is called by the builders before save.
	feat.NameValidator = featDescName.Validators[0].(func(string) error)
	languageMixin := schema.Language{}.Mixin()
	languageMixinFields0 := languageMixin[0].Fields()
	_ = languageMixinFields0
	languageFields := schema.Language{}.Fields()
	_ = languageFields
	// languageDescIndx is the schema descriptor for indx field.
	languageDescIndx := languageMixinFields0[0].Descriptor()
	// language.IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	language.IndxValidator = languageDescIndx.Validators[0].(func(string) error)
	// languageDescName is the schema descriptor for name field.
	languageDescName := languageMixinFields0[1].Descriptor()
	// language.NameValidator is a validator for the "name" field. It is called by the builders before save.
	language.NameValidator = languageDescName.Validators[0].(func(string) error)
	magicschoolMixin := schema.MagicSchool{}.Mixin()
	magicschoolMixinFields0 := magicschoolMixin[0].Fields()
	_ = magicschoolMixinFields0
	magicschoolFields := schema.MagicSchool{}.Fields()
	_ = magicschoolFields
	// magicschoolDescIndx is the schema descriptor for indx field.
	magicschoolDescIndx := magicschoolMixinFields0[0].Descriptor()
	// magicschool.IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	magicschool.IndxValidator = magicschoolDescIndx.Validators[0].(func(string) error)
	// magicschoolDescName is the schema descriptor for name field.
	magicschoolDescName := magicschoolMixinFields0[1].Descriptor()
	// magicschool.NameValidator is a validator for the "name" field. It is called by the builders before save.
	magicschool.NameValidator = magicschoolDescName.Validators[0].(func(string) error)
	raceFields := schema.Race{}.Fields()
	_ = raceFields
	// raceDescIndx is the schema descriptor for indx field.
	raceDescIndx := raceFields[0].Descriptor()
	// race.IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	race.IndxValidator = raceDescIndx.Validators[0].(func(string) error)
	// raceDescName is the schema descriptor for name field.
	raceDescName := raceFields[1].Descriptor()
	// race.NameValidator is a validator for the "name" field. It is called by the builders before save.
	race.NameValidator = raceDescName.Validators[0].(func(string) error)
	// raceDescSpeed is the schema descriptor for speed field.
	raceDescSpeed := raceFields[2].Descriptor()
	// race.SpeedValidator is a validator for the "speed" field. It is called by the builders before save.
	race.SpeedValidator = raceDescSpeed.Validators[0].(func(int) error)
	ruleMixin := schema.Rule{}.Mixin()
	ruleMixinFields0 := ruleMixin[0].Fields()
	_ = ruleMixinFields0
	ruleFields := schema.Rule{}.Fields()
	_ = ruleFields
	// ruleDescIndx is the schema descriptor for indx field.
	ruleDescIndx := ruleMixinFields0[0].Descriptor()
	// rule.IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	rule.IndxValidator = ruleDescIndx.Validators[0].(func(string) error)
	// ruleDescName is the schema descriptor for name field.
	ruleDescName := ruleMixinFields0[1].Descriptor()
	// rule.NameValidator is a validator for the "name" field. It is called by the builders before save.
	rule.NameValidator = ruleDescName.Validators[0].(func(string) error)
	rulesectionMixin := schema.RuleSection{}.Mixin()
	rulesectionMixinFields0 := rulesectionMixin[0].Fields()
	_ = rulesectionMixinFields0
	rulesectionFields := schema.RuleSection{}.Fields()
	_ = rulesectionFields
	// rulesectionDescIndx is the schema descriptor for indx field.
	rulesectionDescIndx := rulesectionMixinFields0[0].Descriptor()
	// rulesection.IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	rulesection.IndxValidator = rulesectionDescIndx.Validators[0].(func(string) error)
	// rulesectionDescName is the schema descriptor for name field.
	rulesectionDescName := rulesectionMixinFields0[1].Descriptor()
	// rulesection.NameValidator is a validator for the "name" field. It is called by the builders before save.
	rulesection.NameValidator = rulesectionDescName.Validators[0].(func(string) error)
	skillMixin := schema.Skill{}.Mixin()
	skillMixinFields0 := skillMixin[0].Fields()
	_ = skillMixinFields0
	skillFields := schema.Skill{}.Fields()
	_ = skillFields
	// skillDescIndx is the schema descriptor for indx field.
	skillDescIndx := skillMixinFields0[0].Descriptor()
	// skill.IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	skill.IndxValidator = skillDescIndx.Validators[0].(func(string) error)
	// skillDescName is the schema descriptor for name field.
	skillDescName := skillMixinFields0[1].Descriptor()
	// skill.NameValidator is a validator for the "name" field. It is called by the builders before save.
	skill.NameValidator = skillDescName.Validators[0].(func(string) error)
	weaponpropertyMixin := schema.WeaponProperty{}.Mixin()
	weaponpropertyMixinFields0 := weaponpropertyMixin[0].Fields()
	_ = weaponpropertyMixinFields0
	weaponpropertyFields := schema.WeaponProperty{}.Fields()
	_ = weaponpropertyFields
	// weaponpropertyDescIndx is the schema descriptor for indx field.
	weaponpropertyDescIndx := weaponpropertyMixinFields0[0].Descriptor()
	// weaponproperty.IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	weaponproperty.IndxValidator = weaponpropertyDescIndx.Validators[0].(func(string) error)
	// weaponpropertyDescName is the schema descriptor for name field.
	weaponpropertyDescName := weaponpropertyMixinFields0[1].Descriptor()
	// weaponproperty.NameValidator is a validator for the "name" field. It is called by the builders before save.
	weaponproperty.NameValidator = weaponpropertyDescName.Validators[0].(func(string) error)
}
