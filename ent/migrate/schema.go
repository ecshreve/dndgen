// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AbilityScoresColumns holds the columns for the "ability_scores" table.
	AbilityScoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "full_name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON},
	}
	// AbilityScoresTable holds the schema information for the "ability_scores" table.
	AbilityScoresTable = &schema.Table{
		Name:       "ability_scores",
		Columns:    AbilityScoresColumns,
		PrimaryKey: []*schema.Column{AbilityScoresColumns[0]},
	}
	// ArmorsColumns holds the columns for the "armors" table.
	ArmorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "stealth_disadvantage", Type: field.TypeBool},
		{Name: "min_strength", Type: field.TypeInt},
		{Name: "equipment_id", Type: field.TypeInt, Unique: true},
	}
	// ArmorsTable holds the schema information for the "armors" table.
	ArmorsTable = &schema.Table{
		Name:       "armors",
		Columns:    ArmorsColumns,
		PrimaryKey: []*schema.Column{ArmorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "armors_equipment_armor",
				Columns:    []*schema.Column{ArmorsColumns[5]},
				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ArmorClassesColumns holds the columns for the "armor_classes" table.
	ArmorClassesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "base", Type: field.TypeInt},
		{Name: "dex_bonus", Type: field.TypeBool},
		{Name: "max_bonus", Type: field.TypeInt, Nullable: true},
		{Name: "armor_armor_class", Type: field.TypeInt, Nullable: true},
	}
	// ArmorClassesTable holds the schema information for the "armor_classes" table.
	ArmorClassesTable = &schema.Table{
		Name:       "armor_classes",
		Columns:    ArmorClassesColumns,
		PrimaryKey: []*schema.Column{ArmorClassesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "armor_classes_armors_armor_class",
				Columns:    []*schema.Column{ArmorClassesColumns[4]},
				RefColumns: []*schema.Column{ArmorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ClassesColumns holds the columns for the "classes" table.
	ClassesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "hit_die", Type: field.TypeInt},
	}
	// ClassesTable holds the schema information for the "classes" table.
	ClassesTable = &schema.Table{
		Name:       "classes",
		Columns:    ClassesColumns,
		PrimaryKey: []*schema.Column{ClassesColumns[0]},
	}
	// CostsColumns holds the columns for the "costs" table.
	CostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "unit", Type: field.TypeString},
	}
	// CostsTable holds the schema information for the "costs" table.
	CostsTable = &schema.Table{
		Name:       "costs",
		Columns:    CostsColumns,
		PrimaryKey: []*schema.Column{CostsColumns[0]},
	}
	// DamageTypesColumns holds the columns for the "damage_types" table.
	DamageTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON},
		{Name: "weapon_damage_damage_type", Type: field.TypeInt, Nullable: true},
	}
	// DamageTypesTable holds the schema information for the "damage_types" table.
	DamageTypesTable = &schema.Table{
		Name:       "damage_types",
		Columns:    DamageTypesColumns,
		PrimaryKey: []*schema.Column{DamageTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "damage_types_weapon_damages_damage_type",
				Columns:    []*schema.Column{DamageTypesColumns[4]},
				RefColumns: []*schema.Column{WeaponDamagesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EquipmentColumns holds the columns for the "equipment" table.
	EquipmentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "equipment_equipment_category", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_cost", Type: field.TypeInt, Nullable: true},
	}
	// EquipmentTable holds the schema information for the "equipment" table.
	EquipmentTable = &schema.Table{
		Name:       "equipment",
		Columns:    EquipmentColumns,
		PrimaryKey: []*schema.Column{EquipmentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "equipment_equipment_categories_equipment_category",
				Columns:    []*schema.Column{EquipmentColumns[3]},
				RefColumns: []*schema.Column{EquipmentCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "equipment_costs_cost",
				Columns:    []*schema.Column{EquipmentColumns[4]},
				RefColumns: []*schema.Column{CostsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EquipmentCategoriesColumns holds the columns for the "equipment_categories" table.
	EquipmentCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeEnum, Enums: []string{"weapon", "armor", "adventuring-gear", "tools", "mounts-and-vehicles", "other"}, Default: "other"},
	}
	// EquipmentCategoriesTable holds the schema information for the "equipment_categories" table.
	EquipmentCategoriesTable = &schema.Table{
		Name:       "equipment_categories",
		Columns:    EquipmentCategoriesColumns,
		PrimaryKey: []*schema.Column{EquipmentCategoriesColumns[0]},
	}
	// GearsColumns holds the columns for the "gears" table.
	GearsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "gear_category", Type: field.TypeEnum, Enums: []string{"ammunition", "standard_gear", "kits", "equipment_packs", "arcane_foci", "druidic_foci", "holy_symbols", "other"}, Default: "other"},
		{Name: "desc", Type: field.TypeJSON},
		{Name: "quantity", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_id", Type: field.TypeInt, Unique: true},
	}
	// GearsTable holds the schema information for the "gears" table.
	GearsTable = &schema.Table{
		Name:       "gears",
		Columns:    GearsColumns,
		PrimaryKey: []*schema.Column{GearsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "gears_equipment_gear",
				Columns:    []*schema.Column{GearsColumns[6]},
				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// LanguagesColumns holds the columns for the "languages" table.
	LanguagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeString},
		{Name: "language_type", Type: field.TypeEnum, Enums: []string{"STANDARD", "EXOTIC"}, Default: "STANDARD"},
		{Name: "script", Type: field.TypeEnum, Nullable: true, Enums: []string{"Common", "Dwarvish", "Elvish", "Infernal", "Draconic", "Celestial", "Abyssal", "Giant", "Gnomish", "Goblin", "Halfling", "Orc", "Other"}, Default: "Common"},
	}
	// LanguagesTable holds the schema information for the "languages" table.
	LanguagesTable = &schema.Table{
		Name:       "languages",
		Columns:    LanguagesColumns,
		PrimaryKey: []*schema.Column{LanguagesColumns[0]},
	}
	// ProficienciesColumns holds the columns for the "proficiencies" table.
	ProficienciesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "proficiency_category", Type: field.TypeString},
		{Name: "proficiency_skill", Type: field.TypeInt, Nullable: true},
		{Name: "proficiency_equipment", Type: field.TypeInt, Nullable: true},
		{Name: "proficiency_saving_throw", Type: field.TypeInt, Nullable: true},
	}
	// ProficienciesTable holds the schema information for the "proficiencies" table.
	ProficienciesTable = &schema.Table{
		Name:       "proficiencies",
		Columns:    ProficienciesColumns,
		PrimaryKey: []*schema.Column{ProficienciesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "proficiencies_skills_skill",
				Columns:    []*schema.Column{ProficienciesColumns[4]},
				RefColumns: []*schema.Column{SkillsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "proficiencies_equipment_equipment",
				Columns:    []*schema.Column{ProficienciesColumns[5]},
				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "proficiencies_ability_scores_saving_throw",
				Columns:    []*schema.Column{ProficienciesColumns[6]},
				RefColumns: []*schema.Column{AbilityScoresColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RacesColumns holds the columns for the "races" table.
	RacesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "speed", Type: field.TypeInt},
	}
	// RacesTable holds the schema information for the "races" table.
	RacesTable = &schema.Table{
		Name:       "races",
		Columns:    RacesColumns,
		PrimaryKey: []*schema.Column{RacesColumns[0]},
	}
	// SkillsColumns holds the columns for the "skills" table.
	SkillsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON},
		{Name: "skill_ability_score", Type: field.TypeInt, Nullable: true},
	}
	// SkillsTable holds the schema information for the "skills" table.
	SkillsTable = &schema.Table{
		Name:       "skills",
		Columns:    SkillsColumns,
		PrimaryKey: []*schema.Column{SkillsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "skills_ability_scores_ability_score",
				Columns:    []*schema.Column{SkillsColumns[4]},
				RefColumns: []*schema.Column{AbilityScoresColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ToolsColumns holds the columns for the "tools" table.
	ToolsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "tool_category", Type: field.TypeString},
		{Name: "equipment_id", Type: field.TypeInt, Unique: true},
	}
	// ToolsTable holds the schema information for the "tools" table.
	ToolsTable = &schema.Table{
		Name:       "tools",
		Columns:    ToolsColumns,
		PrimaryKey: []*schema.Column{ToolsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tools_equipment_tool",
				Columns:    []*schema.Column{ToolsColumns[4]},
				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// VehiclesColumns holds the columns for the "vehicles" table.
	VehiclesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "vehicle_category", Type: field.TypeString},
		{Name: "capacity", Type: field.TypeString},
		{Name: "equipment_id", Type: field.TypeInt, Unique: true},
	}
	// VehiclesTable holds the schema information for the "vehicles" table.
	VehiclesTable = &schema.Table{
		Name:       "vehicles",
		Columns:    VehiclesColumns,
		PrimaryKey: []*schema.Column{VehiclesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "vehicles_equipment_vehicle",
				Columns:    []*schema.Column{VehiclesColumns[5]},
				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WeaponsColumns holds the columns for the "weapons" table.
	WeaponsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "weapon_range", Type: field.TypeString},
		{Name: "equipment_id", Type: field.TypeInt, Unique: true},
	}
	// WeaponsTable holds the schema information for the "weapons" table.
	WeaponsTable = &schema.Table{
		Name:       "weapons",
		Columns:    WeaponsColumns,
		PrimaryKey: []*schema.Column{WeaponsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "weapons_equipment_weapon",
				Columns:    []*schema.Column{WeaponsColumns[4]},
				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WeaponDamagesColumns holds the columns for the "weapon_damages" table.
	WeaponDamagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "dice", Type: field.TypeString},
		{Name: "weapon_damage", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// WeaponDamagesTable holds the schema information for the "weapon_damages" table.
	WeaponDamagesTable = &schema.Table{
		Name:       "weapon_damages",
		Columns:    WeaponDamagesColumns,
		PrimaryKey: []*schema.Column{WeaponDamagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "weapon_damages_weapons_damage",
				Columns:    []*schema.Column{WeaponDamagesColumns[2]},
				RefColumns: []*schema.Column{WeaponsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ClassProficienciesColumns holds the columns for the "class_proficiencies" table.
	ClassProficienciesColumns = []*schema.Column{
		{Name: "class_id", Type: field.TypeInt},
		{Name: "proficiency_id", Type: field.TypeInt},
	}
	// ClassProficienciesTable holds the schema information for the "class_proficiencies" table.
	ClassProficienciesTable = &schema.Table{
		Name:       "class_proficiencies",
		Columns:    ClassProficienciesColumns,
		PrimaryKey: []*schema.Column{ClassProficienciesColumns[0], ClassProficienciesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "class_proficiencies_class_id",
				Columns:    []*schema.Column{ClassProficienciesColumns[0]},
				RefColumns: []*schema.Column{ClassesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "class_proficiencies_proficiency_id",
				Columns:    []*schema.Column{ClassProficienciesColumns[1]},
				RefColumns: []*schema.Column{ProficienciesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RaceLanguagesColumns holds the columns for the "race_languages" table.
	RaceLanguagesColumns = []*schema.Column{
		{Name: "race_id", Type: field.TypeInt},
		{Name: "language_id", Type: field.TypeInt},
	}
	// RaceLanguagesTable holds the schema information for the "race_languages" table.
	RaceLanguagesTable = &schema.Table{
		Name:       "race_languages",
		Columns:    RaceLanguagesColumns,
		PrimaryKey: []*schema.Column{RaceLanguagesColumns[0], RaceLanguagesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "race_languages_race_id",
				Columns:    []*schema.Column{RaceLanguagesColumns[0]},
				RefColumns: []*schema.Column{RacesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "race_languages_language_id",
				Columns:    []*schema.Column{RaceLanguagesColumns[1]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AbilityScoresTable,
		ArmorsTable,
		ArmorClassesTable,
		ClassesTable,
		CostsTable,
		DamageTypesTable,
		EquipmentTable,
		EquipmentCategoriesTable,
		GearsTable,
		LanguagesTable,
		ProficienciesTable,
		RacesTable,
		SkillsTable,
		ToolsTable,
		VehiclesTable,
		WeaponsTable,
		WeaponDamagesTable,
		ClassProficienciesTable,
		RaceLanguagesTable,
	}
)

func init() {
	ArmorsTable.ForeignKeys[0].RefTable = EquipmentTable
	ArmorClassesTable.ForeignKeys[0].RefTable = ArmorsTable
	DamageTypesTable.ForeignKeys[0].RefTable = WeaponDamagesTable
	EquipmentTable.ForeignKeys[0].RefTable = EquipmentCategoriesTable
	EquipmentTable.ForeignKeys[1].RefTable = CostsTable
	GearsTable.ForeignKeys[0].RefTable = EquipmentTable
	ProficienciesTable.ForeignKeys[0].RefTable = SkillsTable
	ProficienciesTable.ForeignKeys[1].RefTable = EquipmentTable
	ProficienciesTable.ForeignKeys[2].RefTable = AbilityScoresTable
	SkillsTable.ForeignKeys[0].RefTable = AbilityScoresTable
	ToolsTable.ForeignKeys[0].RefTable = EquipmentTable
	VehiclesTable.ForeignKeys[0].RefTable = EquipmentTable
	WeaponsTable.ForeignKeys[0].RefTable = EquipmentTable
	WeaponDamagesTable.ForeignKeys[0].RefTable = WeaponsTable
	ClassProficienciesTable.ForeignKeys[0].RefTable = ClassesTable
	ClassProficienciesTable.ForeignKeys[1].RefTable = ProficienciesTable
	RaceLanguagesTable.ForeignKeys[0].RefTable = RacesTable
	RaceLanguagesTable.ForeignKeys[1].RefTable = LanguagesTable
}
