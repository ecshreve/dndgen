// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AbilityBonusColumns holds the columns for the "ability_bonus" table.
	AbilityBonusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "bonus", Type: field.TypeInt},
		{Name: "ability_bonus_ability_score", Type: field.TypeInt},
		{Name: "ability_bonus_race", Type: field.TypeInt},
	}
	// AbilityBonusTable holds the schema information for the "ability_bonus" table.
	AbilityBonusTable = &schema.Table{
		Name:       "ability_bonus",
		Columns:    AbilityBonusColumns,
		PrimaryKey: []*schema.Column{AbilityBonusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ability_bonus_ability_scores_ability_score",
				Columns:    []*schema.Column{AbilityBonusColumns[2]},
				RefColumns: []*schema.Column{AbilityScoresColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "ability_bonus_races_race",
				Columns:    []*schema.Column{AbilityBonusColumns[3]},
				RefColumns: []*schema.Column{RacesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// AbilityScoresColumns holds the columns for the "ability_scores" table.
	AbilityScoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
		{Name: "full_name", Type: field.TypeString},
	}
	// AbilityScoresTable holds the schema information for the "ability_scores" table.
	AbilityScoresTable = &schema.Table{
		Name:       "ability_scores",
		Columns:    AbilityScoresColumns,
		PrimaryKey: []*schema.Column{AbilityScoresColumns[0]},
	}
	// AlignmentsColumns holds the columns for the "alignments" table.
	AlignmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
		{Name: "abbr", Type: field.TypeString},
	}
	// AlignmentsTable holds the schema information for the "alignments" table.
	AlignmentsTable = &schema.Table{
		Name:       "alignments",
		Columns:    AlignmentsColumns,
		PrimaryKey: []*schema.Column{AlignmentsColumns[0]},
	}
	// ArmorsColumns holds the columns for the "armors" table.
	ArmorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "armor_category", Type: field.TypeEnum, Enums: []string{"light", "medium", "heavy", "shield"}},
		{Name: "str_minimum", Type: field.TypeInt},
		{Name: "stealth_disadvantage", Type: field.TypeBool},
		{Name: "armor_equipment", Type: field.TypeInt, Nullable: true},
	}
	// ArmorsTable holds the schema information for the "armors" table.
	ArmorsTable = &schema.Table{
		Name:       "armors",
		Columns:    ArmorsColumns,
		PrimaryKey: []*schema.Column{ArmorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "armors_equipment_equipment",
				Columns:    []*schema.Column{ArmorsColumns[4]},
				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ArmorClassesColumns holds the columns for the "armor_classes" table.
	ArmorClassesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "base", Type: field.TypeInt},
		{Name: "dex_bonus", Type: field.TypeBool, Default: false},
		{Name: "armor_armor_class", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ArmorClassesTable holds the schema information for the "armor_classes" table.
	ArmorClassesTable = &schema.Table{
		Name:       "armor_classes",
		Columns:    ArmorClassesColumns,
		PrimaryKey: []*schema.Column{ArmorClassesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "armor_classes_armors_armor_class",
				Columns:    []*schema.Column{ArmorClassesColumns[3]},
				RefColumns: []*schema.Column{ArmorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ClassesColumns holds the columns for the "classes" table.
	ClassesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "hit_die", Type: field.TypeInt},
	}
	// ClassesTable holds the schema information for the "classes" table.
	ClassesTable = &schema.Table{
		Name:       "classes",
		Columns:    ClassesColumns,
		PrimaryKey: []*schema.Column{ClassesColumns[0]},
	}
	// CoinsColumns holds the columns for the "coins" table.
	CoinsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
		{Name: "gold_conversion_rate", Type: field.TypeFloat64},
	}
	// CoinsTable holds the schema information for the "coins" table.
	CoinsTable = &schema.Table{
		Name:       "coins",
		Columns:    CoinsColumns,
		PrimaryKey: []*schema.Column{CoinsColumns[0]},
	}
	// ConditionsColumns holds the columns for the "conditions" table.
	ConditionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
	}
	// ConditionsTable holds the schema information for the "conditions" table.
	ConditionsTable = &schema.Table{
		Name:       "conditions",
		Columns:    ConditionsColumns,
		PrimaryKey: []*schema.Column{ConditionsColumns[0]},
	}
	// DamagesColumns holds the columns for the "damages" table.
	DamagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "damage_dice", Type: field.TypeString},
		{Name: "damage_damage_type", Type: field.TypeInt, Nullable: true},
	}
	// DamagesTable holds the schema information for the "damages" table.
	DamagesTable = &schema.Table{
		Name:       "damages",
		Columns:    DamagesColumns,
		PrimaryKey: []*schema.Column{DamagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "damages_damage_types_damage_type",
				Columns:    []*schema.Column{DamagesColumns[2]},
				RefColumns: []*schema.Column{DamageTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DamageTypesColumns holds the columns for the "damage_types" table.
	DamageTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
	}
	// DamageTypesTable holds the schema information for the "damage_types" table.
	DamageTypesTable = &schema.Table{
		Name:       "damage_types",
		Columns:    DamageTypesColumns,
		PrimaryKey: []*schema.Column{DamageTypesColumns[0]},
	}
	// EquipmentColumns holds the columns for the "equipment" table.
	EquipmentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
		{Name: "equipment_category", Type: field.TypeEnum, Enums: []string{"armor", "gear", "vehicles", "tools", "weapon", "other"}},
		{Name: "weight", Type: field.TypeFloat64},
	}
	// EquipmentTable holds the schema information for the "equipment" table.
	EquipmentTable = &schema.Table{
		Name:       "equipment",
		Columns:    EquipmentColumns,
		PrimaryKey: []*schema.Column{EquipmentColumns[0]},
	}
	// EquipmentCostsColumns holds the columns for the "equipment_costs" table.
	EquipmentCostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "quantity", Type: field.TypeInt, Default: 1},
		{Name: "equipment_equipment_costs", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "equipment_cost_coin", Type: field.TypeInt},
	}
	// EquipmentCostsTable holds the schema information for the "equipment_costs" table.
	EquipmentCostsTable = &schema.Table{
		Name:       "equipment_costs",
		Columns:    EquipmentCostsColumns,
		PrimaryKey: []*schema.Column{EquipmentCostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "equipment_costs_equipment_equipment_costs",
				Columns:    []*schema.Column{EquipmentCostsColumns[2]},
				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "equipment_costs_coins_coin",
				Columns:    []*schema.Column{EquipmentCostsColumns[3]},
				RefColumns: []*schema.Column{CoinsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// FeatsColumns holds the columns for the "feats" table.
	FeatsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
	}
	// FeatsTable holds the schema information for the "feats" table.
	FeatsTable = &schema.Table{
		Name:       "feats",
		Columns:    FeatsColumns,
		PrimaryKey: []*schema.Column{FeatsColumns[0]},
	}
	// LanguagesColumns holds the columns for the "languages" table.
	LanguagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
		{Name: "language_type", Type: field.TypeEnum, Enums: []string{"STANDARD", "EXOTIC"}, Default: "STANDARD"},
		{Name: "script", Type: field.TypeEnum, Enums: []string{"Common", "Dwarvish", "Elvish", "Infernal", "Draconic", "Celestial", "Abyssal", "Giant", "Gnomish", "Goblin", "Halfling", "Orc", "Other"}, Default: "Common"},
	}
	// LanguagesTable holds the schema information for the "languages" table.
	LanguagesTable = &schema.Table{
		Name:       "languages",
		Columns:    LanguagesColumns,
		PrimaryKey: []*schema.Column{LanguagesColumns[0]},
	}
	// MagicSchoolsColumns holds the columns for the "magic_schools" table.
	MagicSchoolsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
	}
	// MagicSchoolsTable holds the schema information for the "magic_schools" table.
	MagicSchoolsTable = &schema.Table{
		Name:       "magic_schools",
		Columns:    MagicSchoolsColumns,
		PrimaryKey: []*schema.Column{MagicSchoolsColumns[0]},
	}
	// PropertiesColumns holds the columns for the "properties" table.
	PropertiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
	}
	// PropertiesTable holds the schema information for the "properties" table.
	PropertiesTable = &schema.Table{
		Name:       "properties",
		Columns:    PropertiesColumns,
		PrimaryKey: []*schema.Column{PropertiesColumns[0]},
	}
	// RacesColumns holds the columns for the "races" table.
	RacesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "speed", Type: field.TypeInt},
		{Name: "size", Type: field.TypeEnum, Enums: []string{"Small", "Medium", "Large"}, Default: "Medium"},
		{Name: "size_desc", Type: field.TypeString},
		{Name: "alignment_desc", Type: field.TypeString},
		{Name: "age_desc", Type: field.TypeString},
		{Name: "language_desc", Type: field.TypeString},
	}
	// RacesTable holds the schema information for the "races" table.
	RacesTable = &schema.Table{
		Name:       "races",
		Columns:    RacesColumns,
		PrimaryKey: []*schema.Column{RacesColumns[0]},
	}
	// RulesColumns holds the columns for the "rules" table.
	RulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
	}
	// RulesTable holds the schema information for the "rules" table.
	RulesTable = &schema.Table{
		Name:       "rules",
		Columns:    RulesColumns,
		PrimaryKey: []*schema.Column{RulesColumns[0]},
	}
	// RuleSectionsColumns holds the columns for the "rule_sections" table.
	RuleSectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
		{Name: "rule_id", Type: field.TypeInt, Nullable: true},
	}
	// RuleSectionsTable holds the schema information for the "rule_sections" table.
	RuleSectionsTable = &schema.Table{
		Name:       "rule_sections",
		Columns:    RuleSectionsColumns,
		PrimaryKey: []*schema.Column{RuleSectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rule_sections_rules_sections",
				Columns:    []*schema.Column{RuleSectionsColumns[4]},
				RefColumns: []*schema.Column{RulesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SkillsColumns holds the columns for the "skills" table.
	SkillsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "indx", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "desc", Type: field.TypeJSON, Nullable: true},
		{Name: "ability_score_skills", Type: field.TypeInt, Nullable: true},
	}
	// SkillsTable holds the schema information for the "skills" table.
	SkillsTable = &schema.Table{
		Name:       "skills",
		Columns:    SkillsColumns,
		PrimaryKey: []*schema.Column{SkillsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "skills_ability_scores_skills",
				Columns:    []*schema.Column{SkillsColumns[4]},
				RefColumns: []*schema.Column{AbilityScoresColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WeaponsColumns holds the columns for the "weapons" table.
	WeaponsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "weapon_category", Type: field.TypeEnum, Enums: []string{"simple", "martial", "exotic", "other"}},
		{Name: "weapon_subcategory", Type: field.TypeEnum, Enums: []string{"melee", "ranged", "other"}},
		{Name: "weapon_damage", Type: field.TypeInt, Nullable: true},
		{Name: "weapon_equipment", Type: field.TypeInt, Nullable: true},
		{Name: "weapon_weapon_range", Type: field.TypeInt, Nullable: true},
	}
	// WeaponsTable holds the schema information for the "weapons" table.
	WeaponsTable = &schema.Table{
		Name:       "weapons",
		Columns:    WeaponsColumns,
		PrimaryKey: []*schema.Column{WeaponsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "weapons_damages_damage",
				Columns:    []*schema.Column{WeaponsColumns[3]},
				RefColumns: []*schema.Column{DamagesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "weapons_equipment_equipment",
				Columns:    []*schema.Column{WeaponsColumns[4]},
				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "weapons_weapon_ranges_weapon_range",
				Columns:    []*schema.Column{WeaponsColumns[5]},
				RefColumns: []*schema.Column{WeaponRangesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WeaponRangesColumns holds the columns for the "weapon_ranges" table.
	WeaponRangesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "range_normal", Type: field.TypeInt, Nullable: true},
		{Name: "range_long", Type: field.TypeInt, Nullable: true},
		{Name: "throw_range_normal", Type: field.TypeInt, Nullable: true},
		{Name: "throw_range_long", Type: field.TypeInt, Nullable: true},
	}
	// WeaponRangesTable holds the schema information for the "weapon_ranges" table.
	WeaponRangesTable = &schema.Table{
		Name:       "weapon_ranges",
		Columns:    WeaponRangesColumns,
		PrimaryKey: []*schema.Column{WeaponRangesColumns[0]},
	}
	// RaceLanguagesColumns holds the columns for the "race_languages" table.
	RaceLanguagesColumns = []*schema.Column{
		{Name: "race_id", Type: field.TypeInt},
		{Name: "language_id", Type: field.TypeInt},
	}
	// RaceLanguagesTable holds the schema information for the "race_languages" table.
	RaceLanguagesTable = &schema.Table{
		Name:       "race_languages",
		Columns:    RaceLanguagesColumns,
		PrimaryKey: []*schema.Column{RaceLanguagesColumns[0], RaceLanguagesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "race_languages_race_id",
				Columns:    []*schema.Column{RaceLanguagesColumns[0]},
				RefColumns: []*schema.Column{RacesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "race_languages_language_id",
				Columns:    []*schema.Column{RaceLanguagesColumns[1]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// WeaponPropertiesColumns holds the columns for the "weapon_properties" table.
	WeaponPropertiesColumns = []*schema.Column{
		{Name: "weapon_id", Type: field.TypeInt},
		{Name: "property_id", Type: field.TypeInt},
	}
	// WeaponPropertiesTable holds the schema information for the "weapon_properties" table.
	WeaponPropertiesTable = &schema.Table{
		Name:       "weapon_properties",
		Columns:    WeaponPropertiesColumns,
		PrimaryKey: []*schema.Column{WeaponPropertiesColumns[0], WeaponPropertiesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "weapon_properties_weapon_id",
				Columns:    []*schema.Column{WeaponPropertiesColumns[0]},
				RefColumns: []*schema.Column{WeaponsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "weapon_properties_property_id",
				Columns:    []*schema.Column{WeaponPropertiesColumns[1]},
				RefColumns: []*schema.Column{PropertiesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AbilityBonusTable,
		AbilityScoresTable,
		AlignmentsTable,
		ArmorsTable,
		ArmorClassesTable,
		ClassesTable,
		CoinsTable,
		ConditionsTable,
		DamagesTable,
		DamageTypesTable,
		EquipmentTable,
		EquipmentCostsTable,
		FeatsTable,
		LanguagesTable,
		MagicSchoolsTable,
		PropertiesTable,
		RacesTable,
		RulesTable,
		RuleSectionsTable,
		SkillsTable,
		WeaponsTable,
		WeaponRangesTable,
		RaceLanguagesTable,
		WeaponPropertiesTable,
	}
)

func init() {
	AbilityBonusTable.ForeignKeys[0].RefTable = AbilityScoresTable
	AbilityBonusTable.ForeignKeys[1].RefTable = RacesTable
	ArmorsTable.ForeignKeys[0].RefTable = EquipmentTable
	ArmorClassesTable.ForeignKeys[0].RefTable = ArmorsTable
	DamagesTable.ForeignKeys[0].RefTable = DamageTypesTable
	EquipmentCostsTable.ForeignKeys[0].RefTable = EquipmentTable
	EquipmentCostsTable.ForeignKeys[1].RefTable = CoinsTable
	RuleSectionsTable.ForeignKeys[0].RefTable = RulesTable
	SkillsTable.ForeignKeys[0].RefTable = AbilityScoresTable
	WeaponsTable.ForeignKeys[0].RefTable = DamagesTable
	WeaponsTable.ForeignKeys[1].RefTable = EquipmentTable
	WeaponsTable.ForeignKeys[2].RefTable = WeaponRangesTable
	RaceLanguagesTable.ForeignKeys[0].RefTable = RacesTable
	RaceLanguagesTable.ForeignKeys[1].RefTable = LanguagesTable
	WeaponPropertiesTable.ForeignKeys[0].RefTable = WeaponsTable
	WeaponPropertiesTable.ForeignKeys[1].RefTable = PropertiesTable
}
