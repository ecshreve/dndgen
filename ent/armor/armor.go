// Code generated by ent, DO NOT EDIT.

package armor

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the armor type in the database.
	Label = "armor"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIndx holds the string denoting the indx field in the database.
	FieldIndx = "indx"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldWeight holds the string denoting the weight field in the database.
	FieldWeight = "weight"
	// FieldStealthDisadvantage holds the string denoting the stealth_disadvantage field in the database.
	FieldStealthDisadvantage = "stealth_disadvantage"
	// FieldArmorClass holds the string denoting the armor_class field in the database.
	FieldArmorClass = "armor_class"
	// FieldMinStrength holds the string denoting the min_strength field in the database.
	FieldMinStrength = "min_strength"
	// Table holds the table name of the armor in the database.
	Table = "armors"
)

// Columns holds all SQL columns for armor fields.
var Columns = []string{
	FieldID,
	FieldIndx,
	FieldName,
	FieldWeight,
	FieldStealthDisadvantage,
	FieldArmorClass,
	FieldMinStrength,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// IndxValidator is a validator for the "indx" field. It is called by the builders before save.
	IndxValidator func(string) error
)

// OrderOption defines the ordering options for the Armor queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByIndx orders the results by the indx field.
func ByIndx(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIndx, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByWeight orders the results by the weight field.
func ByWeight(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldWeight, opts...).ToFunc()
}

// ByStealthDisadvantage orders the results by the stealth_disadvantage field.
func ByStealthDisadvantage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStealthDisadvantage, opts...).ToFunc()
}

// ByArmorClass orders the results by the armor_class field.
func ByArmorClass(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldArmorClass, opts...).ToFunc()
}

// ByMinStrength orders the results by the min_strength field.
func ByMinStrength(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMinStrength, opts...).ToFunc()
}
