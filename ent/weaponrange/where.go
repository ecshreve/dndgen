// Code generated by ent, DO NOT EDIT.

package weaponrange

import (
	"entgo.io/ent/dialect/sql"
	"github.com/ecshreve/dndgen/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldLTE(FieldID, id))
}

// RangeNormal applies equality check predicate on the "range_normal" field. It's identical to RangeNormalEQ.
func RangeNormal(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldEQ(FieldRangeNormal, v))
}

// RangeLong applies equality check predicate on the "range_long" field. It's identical to RangeLongEQ.
func RangeLong(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldEQ(FieldRangeLong, v))
}

// ThrowRangeNormal applies equality check predicate on the "throw_range_normal" field. It's identical to ThrowRangeNormalEQ.
func ThrowRangeNormal(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldEQ(FieldThrowRangeNormal, v))
}

// ThrowRangeLong applies equality check predicate on the "throw_range_long" field. It's identical to ThrowRangeLongEQ.
func ThrowRangeLong(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldEQ(FieldThrowRangeLong, v))
}

// RangeNormalEQ applies the EQ predicate on the "range_normal" field.
func RangeNormalEQ(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldEQ(FieldRangeNormal, v))
}

// RangeNormalNEQ applies the NEQ predicate on the "range_normal" field.
func RangeNormalNEQ(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNEQ(FieldRangeNormal, v))
}

// RangeNormalIn applies the In predicate on the "range_normal" field.
func RangeNormalIn(vs ...int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldIn(FieldRangeNormal, vs...))
}

// RangeNormalNotIn applies the NotIn predicate on the "range_normal" field.
func RangeNormalNotIn(vs ...int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNotIn(FieldRangeNormal, vs...))
}

// RangeNormalGT applies the GT predicate on the "range_normal" field.
func RangeNormalGT(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldGT(FieldRangeNormal, v))
}

// RangeNormalGTE applies the GTE predicate on the "range_normal" field.
func RangeNormalGTE(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldGTE(FieldRangeNormal, v))
}

// RangeNormalLT applies the LT predicate on the "range_normal" field.
func RangeNormalLT(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldLT(FieldRangeNormal, v))
}

// RangeNormalLTE applies the LTE predicate on the "range_normal" field.
func RangeNormalLTE(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldLTE(FieldRangeNormal, v))
}

// RangeNormalIsNil applies the IsNil predicate on the "range_normal" field.
func RangeNormalIsNil() predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldIsNull(FieldRangeNormal))
}

// RangeNormalNotNil applies the NotNil predicate on the "range_normal" field.
func RangeNormalNotNil() predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNotNull(FieldRangeNormal))
}

// RangeLongEQ applies the EQ predicate on the "range_long" field.
func RangeLongEQ(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldEQ(FieldRangeLong, v))
}

// RangeLongNEQ applies the NEQ predicate on the "range_long" field.
func RangeLongNEQ(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNEQ(FieldRangeLong, v))
}

// RangeLongIn applies the In predicate on the "range_long" field.
func RangeLongIn(vs ...int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldIn(FieldRangeLong, vs...))
}

// RangeLongNotIn applies the NotIn predicate on the "range_long" field.
func RangeLongNotIn(vs ...int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNotIn(FieldRangeLong, vs...))
}

// RangeLongGT applies the GT predicate on the "range_long" field.
func RangeLongGT(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldGT(FieldRangeLong, v))
}

// RangeLongGTE applies the GTE predicate on the "range_long" field.
func RangeLongGTE(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldGTE(FieldRangeLong, v))
}

// RangeLongLT applies the LT predicate on the "range_long" field.
func RangeLongLT(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldLT(FieldRangeLong, v))
}

// RangeLongLTE applies the LTE predicate on the "range_long" field.
func RangeLongLTE(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldLTE(FieldRangeLong, v))
}

// RangeLongIsNil applies the IsNil predicate on the "range_long" field.
func RangeLongIsNil() predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldIsNull(FieldRangeLong))
}

// RangeLongNotNil applies the NotNil predicate on the "range_long" field.
func RangeLongNotNil() predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNotNull(FieldRangeLong))
}

// ThrowRangeNormalEQ applies the EQ predicate on the "throw_range_normal" field.
func ThrowRangeNormalEQ(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldEQ(FieldThrowRangeNormal, v))
}

// ThrowRangeNormalNEQ applies the NEQ predicate on the "throw_range_normal" field.
func ThrowRangeNormalNEQ(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNEQ(FieldThrowRangeNormal, v))
}

// ThrowRangeNormalIn applies the In predicate on the "throw_range_normal" field.
func ThrowRangeNormalIn(vs ...int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldIn(FieldThrowRangeNormal, vs...))
}

// ThrowRangeNormalNotIn applies the NotIn predicate on the "throw_range_normal" field.
func ThrowRangeNormalNotIn(vs ...int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNotIn(FieldThrowRangeNormal, vs...))
}

// ThrowRangeNormalGT applies the GT predicate on the "throw_range_normal" field.
func ThrowRangeNormalGT(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldGT(FieldThrowRangeNormal, v))
}

// ThrowRangeNormalGTE applies the GTE predicate on the "throw_range_normal" field.
func ThrowRangeNormalGTE(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldGTE(FieldThrowRangeNormal, v))
}

// ThrowRangeNormalLT applies the LT predicate on the "throw_range_normal" field.
func ThrowRangeNormalLT(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldLT(FieldThrowRangeNormal, v))
}

// ThrowRangeNormalLTE applies the LTE predicate on the "throw_range_normal" field.
func ThrowRangeNormalLTE(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldLTE(FieldThrowRangeNormal, v))
}

// ThrowRangeNormalIsNil applies the IsNil predicate on the "throw_range_normal" field.
func ThrowRangeNormalIsNil() predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldIsNull(FieldThrowRangeNormal))
}

// ThrowRangeNormalNotNil applies the NotNil predicate on the "throw_range_normal" field.
func ThrowRangeNormalNotNil() predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNotNull(FieldThrowRangeNormal))
}

// ThrowRangeLongEQ applies the EQ predicate on the "throw_range_long" field.
func ThrowRangeLongEQ(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldEQ(FieldThrowRangeLong, v))
}

// ThrowRangeLongNEQ applies the NEQ predicate on the "throw_range_long" field.
func ThrowRangeLongNEQ(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNEQ(FieldThrowRangeLong, v))
}

// ThrowRangeLongIn applies the In predicate on the "throw_range_long" field.
func ThrowRangeLongIn(vs ...int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldIn(FieldThrowRangeLong, vs...))
}

// ThrowRangeLongNotIn applies the NotIn predicate on the "throw_range_long" field.
func ThrowRangeLongNotIn(vs ...int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNotIn(FieldThrowRangeLong, vs...))
}

// ThrowRangeLongGT applies the GT predicate on the "throw_range_long" field.
func ThrowRangeLongGT(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldGT(FieldThrowRangeLong, v))
}

// ThrowRangeLongGTE applies the GTE predicate on the "throw_range_long" field.
func ThrowRangeLongGTE(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldGTE(FieldThrowRangeLong, v))
}

// ThrowRangeLongLT applies the LT predicate on the "throw_range_long" field.
func ThrowRangeLongLT(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldLT(FieldThrowRangeLong, v))
}

// ThrowRangeLongLTE applies the LTE predicate on the "throw_range_long" field.
func ThrowRangeLongLTE(v int) predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldLTE(FieldThrowRangeLong, v))
}

// ThrowRangeLongIsNil applies the IsNil predicate on the "throw_range_long" field.
func ThrowRangeLongIsNil() predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldIsNull(FieldThrowRangeLong))
}

// ThrowRangeLongNotNil applies the NotNil predicate on the "throw_range_long" field.
func ThrowRangeLongNotNil() predicate.WeaponRange {
	return predicate.WeaponRange(sql.FieldNotNull(FieldThrowRangeLong))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.WeaponRange) predicate.WeaponRange {
	return predicate.WeaponRange(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.WeaponRange) predicate.WeaponRange {
	return predicate.WeaponRange(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.WeaponRange) predicate.WeaponRange {
	return predicate.WeaponRange(sql.NotPredicates(p))
}
