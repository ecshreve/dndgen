// Code generated by ent, DO NOT EDIT.

package weaponrange

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the weaponrange type in the database.
	Label = "weapon_range"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRangeNormal holds the string denoting the range_normal field in the database.
	FieldRangeNormal = "range_normal"
	// FieldRangeLong holds the string denoting the range_long field in the database.
	FieldRangeLong = "range_long"
	// FieldThrowRangeNormal holds the string denoting the throw_range_normal field in the database.
	FieldThrowRangeNormal = "throw_range_normal"
	// FieldThrowRangeLong holds the string denoting the throw_range_long field in the database.
	FieldThrowRangeLong = "throw_range_long"
	// Table holds the table name of the weaponrange in the database.
	Table = "weapon_ranges"
)

// Columns holds all SQL columns for weaponrange fields.
var Columns = []string{
	FieldID,
	FieldRangeNormal,
	FieldRangeLong,
	FieldThrowRangeNormal,
	FieldThrowRangeLong,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the WeaponRange queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByRangeNormal orders the results by the range_normal field.
func ByRangeNormal(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRangeNormal, opts...).ToFunc()
}

// ByRangeLong orders the results by the range_long field.
func ByRangeLong(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRangeLong, opts...).ToFunc()
}

// ByThrowRangeNormal orders the results by the throw_range_normal field.
func ByThrowRangeNormal(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldThrowRangeNormal, opts...).ToFunc()
}

// ByThrowRangeLong orders the results by the throw_range_long field.
func ByThrowRangeLong(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldThrowRangeLong, opts...).ToFunc()
}
