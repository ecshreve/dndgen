[[task]]
  id = "test"
  description = "Run all go tests"
  type = "short"
  cmd = "go test -v ./..."

[[task]]
  id = "gen"
  description = "Run all code generation"
  type = "short"
  dependencies = ["entgen", "gqlgen", "popgen"]
  
[[task]]
  id = "entgen"
  description = "Generate ent schema"
  type = "short"
  watch = ["ent/schema/*.go", "ent/entc.go", "gqlgen.yml"]
  cmd = """
    echo "Running ent generation with entc..."
    go run -mod=mod ent/entc.go
  """

[[task]]
  id = "entvizfix"
  description = "Fix entviz html"
  type = "short"
  triggers = ["entgen"]
  cmd = """
    echo "Fixing entviz html..."
    sed -i 's/widthConstraint: 60/widthConstraint: 120/g' ent/schema-viz.html
    sed -i 's/heightConstraint: 60/heightConstraint: 40/g' ent/schema-viz.html
    sed -i '/hierarchical: {/,/levelSeparation: 250,/ { 
  s/enabled: true,/enabled: false,/
  s/levelSeparation: 250,/levelSeparation: 100,/
}' ent/schema-viz.html
  """

[[task]]
  id = "gqlgen"
  description = "Generate graphql"
  type = "short"
  watch = ["gqlgen.yml"]
  triggers = ["entgen"]
  cmd = """
    echo "Running gqlgen generation with gqlgen..."
    go run -mod=mod github.com/99designs/gqlgen
  """

[[task]]
  id = "popgen"
  description = "Generate the Popper populators"
  type = "short"
  watch = ["internal/popper/gen.go"]
  dependencies = ["entgen"]
  cmd = """
    echo "Running popper generation with go generate..."
    go generate ./internal/popper/...
  """

[[task]]
  id = "pop"
  description = "Run the Popper populators"
  type = "short"
  dependencies = ["popgen"]
  cmd = """
    echo "Running popper..."
    go run -mod=mod cmd/popper/main.go
  """

[[task]]
  id = "serve"
  description = "Run gqlserver"
  type = "long"
  dependencies = ["pop"]
  triggers = ["gqlgen"]
  cmd = "go run -mod=mod cmd/dndgen/main.go"

[[task]]
  id = "dev"
  description = "Run dev server"
  type = "short"
  dependencies = ["serve"]
  triggers = ["entvizfix"]
  watch = ["ent/schema-viz.html"]
  cmd = """
    echo "Running dev server..."
  """

# ------------------------------------------------------------------------------
#     Database Operations
# ------------------------------------------------------------------------------
[[task]]
  id = "db-hash"
  type = "short"
  cmd = """
  atlas migrate hash \
    --dir "file://ent/migrate/migrations"
  """

[[task]]
  id = "db-diff"
  type = "short"
  cmd = """
  atlas migrate diff <> \
    --dir "file://ent/migrate/migrations" \
    --to "ent://ent/schema?globalid=1" \
    --dev-url "sqlite://dev?mode=memory&_fk=1"
  """

[[task]]
  id = "db-lint"
  type = "short"
  cmd = """
  atlas migrate lint \
    --dir "file://ent/migrate/migrations" \
    --dev-url "sqlite://dev?mode=memory&_fk=1" \
    --latest=1
  """

[[task]]
  id = "db-validate"
  type = "short"
  cmd = """
  atlas migrate validate \
    --dir "file://ent/migrate/migrations" \
    --dev-url "sqlite://dev?mode=memory&_fk=1" 
  """

[[task]]
  id = "db-apply"
  type = "short"
  dependencies = ["db-lint", "db-validate"]
  cmd = """
  atlas migrate apply \
    --dir "file://ent/migrate/migrations" \
    --url "sqlite://dev.db?_fk=1"
  """

[[task]]
  id = "db-clean"
  type = "short"
  cmd = """
  atlas schema clean \
    --url "sqlite://dev.db?_fk=1" \
    --auto-approve
  """

[[task]]
  id = "db-backup"
  description = "Backup database"
  type = "short"
  cmd = """
    echo "backing up database..."
    cp dev.db prod.db
    cp prod.db backup.db.bak
  """