# ------------------------------------------------------------------------------
#     Dev Commands
# ------------------------------------------------------------------------------
[[task]]
  id = "dev"
  description = "Run dev server"
  type = "long"
  dependencies = ["gqlserve"]
  cmd = """
    echo "Running dev server..."
  """

[[task]]
  id = "gqlserve"
  description = "Run the gqlserver"
  type = "short"
  dependencies = ["entvizfix","gengen","popper"]
  cmd = """
    echo "Running gqlserver..."
    go run -mod=mod cmd/gqlserver/main.go
  """

[[task]]
  id = "popper"
  description = "Populate the database"
  type = "short"
  dependencies = ["gengen"]
  cmd = """
    # Check if the database is already populated
    if [ -f dev.db ]; then
      echo "Database already populated skipping..."
      exit 0
    fi

    echo "Running popper populater..."
    go run -mod=mod cmd/popper/main.go
  """

# ------------------------------------------------------------------------------
#     Code Generation
# ------------------------------------------------------------------------------
[[task]]
  id = "entgen"
  description = "Generate ent schema"
  type = "short"
  watch = ["ent/schema/*.go","ent/entc.go","gqlgen.yml"]
  cmd = """
    echo "Running ent generation with entc DIRECTLY..."
    go run -mod=mod ent/entc.go
  """

[[task]]
  id = "gengen"
  description = "Generate graphql"
  type = "short"
  watch = ["gqlgen.yml"]
  cmd = """
    echo "Running code generation generation via go generate..."
    go generate .
  """

# ------------------------------------------------------------------------------
#     Misc Ent Tasks
# ------------------------------------------------------------------------------

[[task]]
  id = "entvizfix"
  description = "Fix entviz html"
  type = "short"
  watch = ["gqlserver/ent.graphql"]
  cmd = """
    echo "Fixing entviz html..."
    sed -i 's/widthConstraint: 60/widthConstraint: 120/g' ent/schema-viz.html
    sed -i 's/heightConstraint: 60/heightConstraint: 40/g' ent/schema-viz.html
    sed -i '/hierarchical: {/,/levelSeparation: 250,/ { 
  s/enabled: true,/enabled: false,/
}' ent/schema-viz.html
  """

[[task]]
  id = "atlasviz"
  description = "Create atlas cloud explore link for database schema with entviz"
  type = "short"
  cmd = """
    echo "Creating atlas cloud explore link for database schema with entviz..."
    go run -mod=mod ariga.io/entviz ./ent/schema   
   """

# ------------------------------------------------------------------------------
#     Testing
# ------------------------------------------------------------------------------

[[task]]
  id = "test"
  description = "Run tests"
  type = "short"
  cmd = """
    echo "Running tests..."
    go test ./internal/...
  """

[[task]]
  id = "snaps"
  description = "Update snapshots"
  type = "short"
  cmd = """
    echo "Updating snapshots..."
    go test ./internal/... -rewriteSnapshots
  """


# ------------------------------------------------------------------------------
#     Atlas Migrations - currently not used
# ------------------------------------------------------------------------------
# [[task]]
#   id = "db-apply"
#   type = "short"
#   dependencies = ["db-diff"]
#   cmd = """
#   atlas migrate apply \
#     --dir "file://ent/migrate/migrations" \
#     --url "sqlite://dev.db?_fk=1" 
#   """
  
# [[task]]
#   id = "db-hash"
#   type = "short"
#   cmd = """
#   atlas migrate hash \
#     --dir "file://ent/migrate/migrations"
#   """

# [[task]]
#   id = "db-diff"
#   type = "short"
#   dependencies = ["db-lint"]
#   cmd = """
#   atlas migrate diff manual \
#     --dir "file://ent/migrate/migrations" \
#     --to "ent://ent/schema?globalid=1" \
#     --dev-url "sqlite://dev?mode=memory&_fk=1"
#   """

# [[task]]
#   id = "db-lint"
#   type = "short"
#   dependencies = ["db-validate"]
#   cmd = """
#   atlas migrate lint \
#     --dir "file://ent/migrate/migrations" \
#     --dev-url "sqlite://dev?mode=memory&_fk=1" \
#     --latest 1
#   """

# [[task]]
#   id = "db-validate"
#   type = "short"
#   cmd = """
#   atlas migrate validate \
#     --dir "file://ent/migrate/migrations" \
#     --dev-url "sqlite://dev?mode=memory&_fk=1" 
#   """

# [[task]]
#   id = "db-clean"
#   type = "short"
#   cmd = """
#   echo "Backing up dev database..."
#   cp dev.db dev-backup.db.bak

#   echo "Cleaning database..."
#   atlas schema clean \
#     --url "sqlite://dev.db?cache=shared&_fk=1" \
#     --auto-approve
#   """