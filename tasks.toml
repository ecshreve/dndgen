[[task]]
  id = "dev"
  description = "Run dev server"
  type = "long"
  dependencies = ["gqlserve"] #, "migrate"]
  cmd = """
    echo "Running dev server..."
  """

# ------------------------------------------------------------------------------
#     Dev Commands
# -----------------------------------------------------------------------------
[[task]]
  id = "grpcserve"
  description = "Run the grpc server"
  type = "long"
  dependencies = ["protogen"]
  cmd = """
    echo "Restoring from DB backup..."
    cp dev.db dev-backup.db.bak
    cp prod-backup.db.bak dev.db

    echo "Running grpc server..."
    go run -mod=mod cmd/grpcserver/main.go
  """


[[task]]
  id = "popdev"
  description = "Run the Popper populators"
  type = "short"
  dependencies = ["db-clean"]
  cmd = """
    echo "Running popper..."
    go run -mod=mod internal/popper/main.go
  """

[[task]]
  id = "gqlserve"
  description = "Run the gqlserver"
  type = "short"
  triggers = ["gqlgen"]
  dependencies = ["migrate-prod"]
  cmd = """
    echo "Running gqlserver..."
    go run -mod=mod cmd/gqlserver/main.go
  """

# ------------------------------------------------------------------------------
#     Code Generation
# ------------------------------------------------------------------------------

[[task]]
  id = "gen"
  description = "Run all code generation"
  type = "group"
  dependencies = ["entgen", "gqlgen", "popgen"] #, "protogen"]

[[task]]
  id = "entgen"
  description = "Generate ent schema"
  type = "short"
  watch = ["ent/schema/*.go", "ent/entc.go", "gqlgen.yml"]
  cmd = """
    echo "Running ent generation with entc..."
    go run -mod=mod ent/entc.go
  """

[[task]]
  id = "gqlgen"
  description = "Generate graphql"
  type = "short"
  watch = ["gqlgen.yml"]
  dependencies = ["entgen"]
  cmd = """
    echo "Running gqlgen generation with gqlgen..."
    go run -mod=mod github.com/99designs/gqlgen
  """

[[task]]
  id = "protogen"
  description = "Generate protos"
  type = "short"
  dependencies = ["entgen"]
  cmd = """
    echo "Running proto generation..."
    go generate ./ent/proto/...
  """

[[task]]
  id = "popgen"
  description = "Generate the Popper populators"
  type = "short"
  watch = ["internal/popper/gen.go"]
  dependencies = ["entgen"]
  cmd = """
    echo "Running popper generation with go generate..."
    go generate ./internal/popper/...
  """

# ------------------------------------------------------------------------------
#     Database Operations
# ------------------------------------------------------------------------------
[[task]]
  id = "migrate-prod"
  type = "short"
  description = "Create prod database and apply migrations"
  dependencies = ["popdev"]
  cmd = """
  echo "Creating prod database..."
  cp dev.db prod.db
  """

[[task]]
  id = "db-apply"
  type = "short"
  description = "clean schema and apply database migrations to dev database"
  cmd = """
  atlas migrate apply \
    --dir "file://ent/migrate/migrations" \
    --url "sqlite://dev.db?_fk=1" 
  """
  
[[task]]
  id = "db-hash"
  type = "short"
  cmd = """
  atlas migrate hash \
    --dir "file://ent/migrate/migrations"
  """

[[task]]
  id = "db-diff"
  type = "short"
  cmd = """
  atlas migrate diff manual \
    --dir "file://ent/migrate/migrations" \
    --to "ent://ent/schema?globalid=1" \
    --dev-url "sqlite://dev?mode=memory&_fk=1"
  """

[[task]]
  id = "db-lint"
  type = "short"
  cmd = """
  atlas migrate lint \
    --dir "file://ent/migrate/migrations" \
    --dev-url "sqlite://dev?mode=memory&_fk=1" \
    --latest 1
  """

[[task]]
  id = "db-validate"
  type = "short"
  cmd = """
  atlas migrate validate \
    --dir "file://ent/migrate/migrations" \
    --dev-url "sqlite://dev?mode=memory&_fk=1" 
  """

[[task]]
  id = "db-clean"
  type = "short"
  dependencies = ["db-backup"]
  cmd = """
  atlas schema clean \
    --url "sqlite://dev.db?cache=shared&_fk=1" \
    --auto-approve
  """

[[task]]
  id = "db-backup"
  description = "Backup databases"
  type = "short"
  cmd = """
    echo "backing up databases..."
    cp dev.db dev-backup.db.bak
    cp prod.db prod-backup.db.bak
  """

# ------------------------------------------------------------------------------
#     Ent Tools
# ------------------------------------------------------------------------------

[[task]]
  id = "entvizfix"
  description = "Fix entviz html"
  type = "short"
  triggers = ["entgen"]
  cmd = """
    echo "Fixing entviz html..."
    sed -i 's/widthConstraint: 60/widthConstraint: 120/g' ent/schema-viz.html
    sed -i 's/heightConstraint: 60/heightConstraint: 40/g' ent/schema-viz.html
    sed -i '/hierarchical: {/,/levelSeparation: 250,/ { 
  s/enabled: true,/enabled: false,/
  s/levelSeparation: 250,/levelSeparation: 100,/
}' ent/schema-viz.html
  """

[[task]]
  id = "atlasviz"
  description = "Create atlas cloud explore link for database schema with entviz"
  type = "short"
  cmd = """
    echo "Creating atlas cloud explore link for database schema with entviz..."
    go run -mod=mod ariga.io/entviz ./ent/schema   
   """

# ------------------------------------------------------------------------------
#     Testing
# ------------------------------------------------------------------------------

[[task]]
  id = "test"
  description = "Run tests"
  type = "short"
  cmd = """
    echo "Running tests..."
    go test ./internal/...
  """

[[task]]
  id = "snaps"
  description = "Update snapshots"
  type = "short"
  cmd = """
    echo "Updating snapshots..."
    go test ./internal/... -rewriteSnapshots
  """